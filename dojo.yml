id: kalevala

name: Kalevala

description: |
  This is a Dojo that a random internet hacker (Idanhurja) did. Idanhurja is made in Finland, the dojo name "Kalevala" is originated in old Finnish mythology.
  
type: public
award:
  emoji: ! "\U0001F43B"
modules:

  - id: reverse
    name: reverse
    description: Simply reverse engineering challenges 


    challenges:

      - id: guessnumber
        name: guessnumber.01
        description: |
          I made this challenge for my 13 year old son, when he wanted to test his hacking skills. Maybe this was not the best introduction challenge for my son, because he lost his interest in hacking after playing with this one ðŸ™‚ There are at least three different ways to play with this simply challenge 
          - scripting (brute force), 
          - reverse engineering by Ida/similar and 
          - GDB (Linux debugger)

      - id: delayedflag
        name: delayed-flag
        description: Challenge will print the flag. The processing time of flag printing seems to be longish.

      - id: guessnumber2
        name: guessnumber.02
        description: a bit more complicated variant of the first one. Still need to enter a correct number but now its not a fixed one, and processing of an user given number seems to take almost as long as delivery of pwn.college belts ðŸ™‚
      
      - id: idan2301
        name: idan23.01
        description: In this challenge you have an opportunity to familiarize yourself with a brand new Idan23-interpreted language. Idan23 market introduction is following the trend that things tend to get released before the whole functionality is available.

      - id: idan2302
        name: idan23.02
        description: Idan23-interpreted language fun. Why interpreter should not print detected unknown commands.. This was used as an unintended solution for Idan23 boss challenge. Now its offered as a separate challenge.

      - id: idan2303
        name: idan23.03
        description: Even more Idan23-interpreted language fun. To guarantee superior hacker experience, corrupted Idan23-program files are not executed.
        
      - id: idan23
        name: idan23.04
        description: The Idan23-interpreted language boss challenge. Intended solution for this functioned nicely for most of Yan85 challenges as an unintended solution (pwn.college years 21-22 edition). You will lose many fun if use it for them all.

  - id: kernel
    name: kernel
    description: First challanges focus on very basics of kernel modules. Then in small steps testing how messed up can we make the system by hotpatching the kernel. For me this was a nice way to learn some of kernel internals. Update 14_12_2024: Today I noticed that intended solution no longer able to be used to get the flag. Something in pwn.college infra updated to counter intended solution for this challenge. To quarantee superios hacker experience an additional script added to this challange to grant you the flag if you have performed intended solution. Intended solution functioned when I last time checked it some months ago..

    challenges:

      - id: level01
        name: level.01
        description: Make a kernel module to access the flag

      - id: level02
        name: level.02
        description: Make a kernel module to communicate with the challenge binary to get the flag

      - id: level03
        name: level.03
        description: Make a kernel module that hides files/folders in directory '/' from command 'ls /' to get the flag

      - id: level04
        name: level.04
        description: Make a kernel module that hides files/folders in directory '/' from command 'ls /' to get the flag. kaslr on.  

      - id: level06
        name: level.06
        description: Make a kernel module that hides file '/challange' but not file '/flag' from command 'ls /' to get the flag. kaslr on.     

      - id: level07
        name: level.07
        description: Command 'ls /' should find a file named as 'l/e/t/s//r/o/c/k' to get the flag. kaslr on.

      - id: level09
        name: level.09
        description: Challenge binary tries to find installed kernel module and then to kill itself. Fool it to exit correctly and hide your .ko and show your personality (this time in stdout) to get the flag. kaslr on.

      - id: level10
        name: level.10
        description: Pass checks to get the flag. kaslr on.

      - id: level11
        name: level.11
        description: Feel free to run any binary. Pass checks to get the flag. kaslr on.

      - id: level12
        name: level.12
        description: As level11 but now some too simply non intended solutions should not be possible.
